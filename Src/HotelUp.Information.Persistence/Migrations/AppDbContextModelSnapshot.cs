// <auto-generated />
using System;
using HotelUp.Information.Persistence.EFCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HotelUp.Information.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("information")
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HotelUp.Information.Persistence.Entities.HotelEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("HotelEvents", "information");
                });

            modelBuilder.Entity("HotelUp.Information.Persistence.Entities.PlannedDish", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<DateOnly>("ServingDate")
                        .HasColumnType("date");

                    b.HasKey("Name");

                    b.ToTable("PlannedDishes", "information");
                });

            modelBuilder.Entity("HotelUp.Information.Persistence.Entities.RoomInformation", b =>
                {
                    b.Property<int>("Number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Number"));

                    b.Property<int>("Capacity")
                        .HasColumnType("integer");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<bool>("WithSpecialNeeds")
                        .HasColumnType("boolean");

                    b.HasKey("Number");

                    b.ToTable("RoomInformations", "information");
                });

            modelBuilder.Entity("HotelUp.Information.Persistence.Entities.RoomInformation", b =>
                {
                    b.OwnsMany("HotelUp.Information.Persistence.Entities.RoomReservation", "Reservations", b1 =>
                        {
                            b1.Property<int>("RoomInformationNumber")
                                .HasColumnType("integer");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            b1.Property<DateTime>("EndDate")
                                .HasColumnType("timestamp with time zone");

                            b1.Property<Guid>("ReservationId")
                                .HasColumnType("uuid");

                            b1.Property<DateTime>("StartDate")
                                .HasColumnType("timestamp with time zone");

                            b1.HasKey("RoomInformationNumber", "Id");

                            b1.ToTable("RoomInformations", "information");

                            b1.ToJson("Reservations");

                            b1.WithOwner()
                                .HasForeignKey("RoomInformationNumber");
                        });

                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
